# Make it use C-a, similar to screen..
unbind C-b
unbind l
set -g prefix C-a
bind-key C-a last-window

# Allow nested tmux sessions by making "C-a a" possible for sending a control
# # sequence to a nested session
bind-key a send-prefix

bind-key -r Right next-window
bind-key -r Left previous-window

set -g base-index 1
set -g renumber-windows on
set-window-option -q -g utf8 on

# Vim-like keybinds
set-option -g status-keys vi
set-window-option -g mode-keys vi

# Move selections to clipboard right away.
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel

# Reload key
bind r source-file ~/.tmux.conf

set -g default-terminal "screen-256color"
set -g history-limit 100000

# THEME
set -g status-interval 60
set -g status-left-length 30
set -g status-left '#[fg=blue](#{b:session_name}) #(whoami)@#H#[default]'
set -g status-right '#[fg=green]%l:%M%P#[default]'

#### COLOUR

# default statusbar colors
#set-option -g status-bg colour233 #base02
set-option -g status-bg default #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour233 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
#set-option -g message-bg colour233 #base02
set-option -g message-bg default #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green

# DEFAULTS
#set-option -g default-command '/bin/bash'
#set-option -g default-shell '/bin/bash'

bind-key -n S-Right next-window
bind-key -n S-Left previous-window
bind-key -n S-Down new-window

set -g set-clipboard on
set -g mouse on
set -g @scroll-speed-num-lines-per-scroll 3
set -g @emulate-scroll-for-no-mouse-alternate-buffer on

# List of plugins.
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'

# Initialize TMUX plugin manager.
run '~/.tmux/plugins/tpm/tpm'

# When a session is started, we never get the chance to modify session-scoped
# ENV and options before the first window is opened. Additionally, hooks are
# not atomic so if a second client starts before our hook is done it can change
# ENV vars we wanted set *once*, at session start, by the first new-session
# request. We handle this by holding a channel lock before calling new-session
# and releasing it from *both* session-created and client-attached hooks.
ELLIPSIS_TMUX="${ELLIPSIS}/data/profile/tmux"
set-hook -g session-created 'source-file "$ELLIPSIS_TMUX/session-created.conf"'
set-hook -g client-attached 'source-file "$ELLIPSIS_TMUX/client-attached.conf"'
# Sometimes we want session ENV like VIRTUAL_ENV configured once, at session
# start *only*. New windows in the session then retain the original VIRTUAL_ENV
# instead of updating it on client-attached (via update-environment) to a bad
# value (client attached while inside in different venv) or dropped (client
# attached while not in venv). Session-created hook simply doesn't add these.
set-option -ga update-environment VIRTUAL_ENV
# PWD Gets a special mention because it will be "wrong" in the global session.
# Tmux calls realpath() on the current directory and loses symlink information.
# However, when PWD is part of update-environment, the realpath()'ed PWD from
# global is immediately replaced by the *client's* version, symlinks intact.
set-option -ga update-environment PWD
