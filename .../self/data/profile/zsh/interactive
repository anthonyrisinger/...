#!/bin/bash

# I'm human, thanks
if [[ $(date +%Z) == 'UTC' ]]; then
    export TZ='America/Chicago'
fi

export TERM="${TERM:-dumb}"
export EDITOR='vim'
export PROMPT_DIRTRIM=3

export VIRTUAL_ENV_DISABLE_PROMPT=true

[[ ${TERM} == dumb ]] &&
    return 0

# Better shell scripting experience:
#   - Word split on newline ONLY.
#   - Disable pathname expansion for unquoted words.
#   - Patterns may expand to zero words.
#   - Patterns may use extended matching @(...) operators.
# With respect to completion routines, `extglob` is already enabled. Sadly, all
# the others interfere with widespread shell conventions and scripts.
#IFS=$'\n'
#set -f
#setopt -o nullglob
#setopt -o extglob

# ZR exports.
export STARTERVIEW=$(
  setopt -o nullglob
  printf '%s\n' ~/zr/ziprecruite[r] ~/ziprecruite[r] /var/starterview |
    head -n1
)
export ZR_WIKI=$(
  setopt -o nullglob
  printf '%s\n' ~/zr/wik[i] "$STARTERVIEW"/.zr-wiki |
    head -n1
)
export SALTSTACK=~/zr/saltstack

: ${DEVELOPER_DIR:=$(xcode-select --print-path 2> /dev/null)}
for x in \
  /usr{,/local}/share/zsh-completion/zsh_completion \
  {,/usr/local}/etc/zsh_completion \
  {,$DEVELOPER_DIR}/usr/share/git{,-core}/git-{prompt.sh,completion.zsh} \
;
do
    [[ $x == */git-completion.zsh ]] &&
      continue # TODO
    [[ -r ${x} ]] &&
        . ${x}
done

_ps1 () { (

    c () {
      # Expands 0xffffff to 16777215.
      declare -i i=$1
      case $1 in
        (black)   i=0;;
        (red)     i=1;;
        (green)   i=2;;
        (yellow)  i=3;;
        (blue)    i=4;;
        (magenta) i=5;;
        (cyan)    i=6;;
        (white)   i=7;;
      esac
      echo -n $i
    }

    e () {
      printf '\['
      while ((${#*})); do
        case $1 in
          (none) tput op; tput sgr0;;
          (fg,*) tput setaf $(c ${1#fg,});;
          (bg,*) tput setab $(c ${1#bg,});;
          (*) tput $1;;
        esac
        shift
      done
      printf '\]'
    }

    local u="$(e none fg,yellow)\h"
    local w="$(e none)"
    local v="${w}\${VIRTUAL_ENV:+\"$(e none fg,magenta)\${VIRTUAL_ENV//@(*\/|.venv)} ${w}\"}"

    if [[ ${EUID} == 0 ]]; then
        local m="$(e none fg,red)▶"
    else
        local m="$(e none)▶"
    fi

    local s=( )

    [[ ${HOSTNAME} =~ ^ca- ]] &&
        s+=("$(e fg,green)★") ||
        s+=("$(e fg,red)⚑")

    [[ ${SSH_CONNECTION} =~ [0-9.]+ ]] &&
        s+=("$(e fg,blue)⇅")

    ((${#s})) &&
        s=" ${s[*]} "

    local q='2>/dev/null'

    echo -e "\
${w}  ⎞ ${w}\D{%l:%M%P} ${v}$(e none)${u}${s}
${w}  ⎥  \$(__git_ps1 '$(e none fg,yellow)%s ' ${q})${w}\w
${w}  ⎥${m} $(e none)"

) }

# Change the window title of X terminals
case ${TERM} in
  [ixatE]term*|rxvt*|gnome*|interix)
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/$HOME/~}\007"'
    ;;
  tmux|screen)
    PROMPT_COMMAND='echo -ne "\033_${USER}@${HOSTNAME%%.*}:${PWD/$HOME/~}\033\\"'
    ;;
esac

# auto-update SSH_AUTH_SOCK within running shells
PROMPT_COMMAND+='
if [[ -n ${TMUX} && -n ${SSH_AUTH_SOCK} ]]; then
    unset SSH_AUTH_SOCK
    export $(tmux show-environment | grep ^SSH_AUTH_SOCK)
fi
'

precmd() { eval "$PROMPT_COMMAND" }

if ls --color=auto >/dev/null 2>&1; then
  alias ls='ls -F --color=auto'
else
  alias ls='ls -F -G'
fi

if type -p dircolors >/dev/null ; then
  if [[ -f ~/.dir_colors ]] ; then
    eval $(dircolors -b ~/.dir_colors)
  elif [[ -f /etc/DIR_COLORS ]] ; then
    eval $(dircolors -b /etc/DIR_COLORS)
  fi
fi

setopt -o extendedglob
setopt -o hist_fcntl_lock
setopt -o hist_ignore_space
setopt -o hist_ignore_all_dups
setopt -o hist_reduce_blanks
setopt -o hist_lex_words
setopt -o share_history
setopt -o extended_history
HISTFILE=${ELLIPSIS}var/cache/zsh/history
SAVEHIST=10000000
HISTSIZE=10000000
HISTORY_IGNORE='([bf]g|[bf]g |exit|exit |cognito|cognito |incognito|incognito )'

NULLCMD=:

PS1=$(_ps1)

[[ -r ${ELLIPSIS}data/profile/zsh/aliases ]] &&
    . ${ELLIPSIS}data/profile/zsh/aliases
