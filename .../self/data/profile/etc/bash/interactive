#!/bin/bash


# I'm human, thanks
if [[ $(date +%Z) == 'UTC' ]]; then
    export TZ='America/Chicago'
fi

# because en_US.utf8 sorting is... dumb
export LC_COLLATE=C

export TERM="${TERM:-dumb}"
export EDITOR='vim'
export BROWSER='chromium'
export PROMPT_DIRTRIM=3

export VIRTUAL_ENV_DISABLE_PROMPT=true
#export PIP_USER=true

<<'COMMENT'
export TMPDIR=~/tmp
(   umask 0077
    tmp=/tmp/user-${USER}/tmp
    [[ ! -d ${tmp} ]] &&
        mkdir -p ${tmp}/{dl,misc}
    [[ ! $(readlink ~/tmp) == ${tmp} ]] &&
        rm -f ~/tmp &&
        ln -s ${tmp} ~/tmp
    ) > /dev/null 2>&1
COMMENT


[[ ${TERM} == dumb ]] &&
    return 0


_cache_comp=${ELLIPSIS}var/cache/bash/completions/
_srcs=(
    /[u]sr{,/local}/share/bash-completion/bash_completion
    {,/usr/local}/[e]tc/bash_completion
    ${ELLIPSIS}data/profile/etc/bash/completion.d/*
    {,/Applications/Xcode.app/Contents/Developer}/[u]sr/share/git{,-core}/git-{prompt.sh,completion.bash}
    $(type -p virtualenvwrapper.sh)
    )

mkdir -p "${_cache_comp}"

for x in "${_srcs[@]}"; do
    [[ -r ${x} ]] &&
        . ${x}
done


<<'COMMENT'
_tmp_SSH_AUTH_SOCK="${SSH_AUTH_SOCK}"; _tmp_SSH_AGENT_PID="${SSH_AGENT_PID}"
export SSH_AUTH_SOCK="${ELLIPSIS}"run/ssh/agent.* SSH_AGENT_PID="${SSH_AUTH_SOCK##*.}"


if ! ssh-add -l > /dev/null 2>&1; then
    rm -f "${ELLIPSIS}"run/ssh/agent.*
    unset SSH_AUTH_SOCK SSH_AGENT_PID
    export SSH_AUTH_SOCK="${_tmp_SSH_AUTH_SOCK}" SSH_AGENT_PID="${_tmp_SSH_AGENT_PID}"
    ssh-add -l > /dev/null 2>&1 ||
        eval $(ssh-agent) > /dev/null
    ln -s "${SSH_AUTH_SOCK}" "${ELLIPSIS}"run/ssh/agent.${SSH_AGENT_PID}
fi
COMMENT


if [[ -z ${NO_TERM_DISCOVER} ]]; then
    if [[ ${TERM} == xterm ]]; then
        case "${COLORTERM}:${XTERM_VERSION}" in
            gnome-terminal:*)   TERM=gnome-256color;;
            :XTerm'(256)')      TERM=xterm-256color;;
            :XTerm'(88)')       TERM=xterm-88color;;
        esac
    fi
    SCREEN_COLORS=$(tput colors)
    if [[ -z ${SCREEN_COLORS} ]]; then
        case "${TERM}" in
            screen-*color-bce)  TERM=screen-bce;;
            *-88color)          TERM=xterm-88color;;
            *-256color)         TERM=xterm-256color;;
        esac
        SCREEN_COLORS=$(tput colors)
    fi
    if [[ -z $SCREEN_COLORS ]] ; then
        case "${TERM}" in
            rxvt*)              TERM=rxvt;;
            screen*)            TERM=screen;;
            *)                  TERM=xterm;;
        esac
        SCREEN_COLORS=$(tput colors)
    fi
fi

# PS1 special sequences
#  0   reset/default
#  1   bold
#  5   blink
#  30  fg black
#  31  fg red
#  32  fg green
#  33  fg brown
#  34  fg blue
#  35  fg purple
#  36  fg cyan
#  37  fg gray
#  40  bg black
#  41  bg red
#  42  bg green
#  43  bg brown
#  44  bg blue
#  45  bg purple
#  46  bg cyan
#  47  bg gray
#  \u  username
#  \h  hostname
#  \$  terminal
#  \W  pwd /
#  \w  pwd ~

_esc () {
    printf '\['
    while ((${#*})); do tput ${c} ${1}; shift; done
    printf '\]'
}

_ps1 () { (

    e () { c= _esc "${@}"; }
    x () { c= _esc sgr0; }
    f () { c=setaf _esc "${@}"; }
    b () { c=setab _esc "${@}"; }

    local w="$(x;e bold;f 0)"
    local v="${w}"'${VIRTUAL_ENV:+"⌥ '$(x;f 5)'${VIRTUAL_ENV##*/}\n"}'${w}
    local d="${w}|"

    if [[ ${EUID} == 0 ]]; then
        local m="$(x;f 1)▶"
        local u="$(x;f 3)\h"
    else
        local m="$(x;e bold;f 0)▶"
        local u="$(x;f 7)\u${d}$(x;f 3)\h"
    fi

    local s=( )

    [[ ${HOSTNAME} =~ xtfx ]] &&
        s+=("$(f 2)★") ||
        s+=("$(f 1)⚑")

    [[ ${SSH_CONNECTION} =~ [0-9.]+ ]] &&
        s+=("$(f 4)⇅")

    ((${#s})) &&
        s=" $(e bold)${s[*]} "

    local q='2>/dev/null'

    echo -e "\
${v}\
${w}  ⎞ ${w}\D{%l:%M%P}$(x) ${u}${s}
${w}  ⎥  \$(__git_ps1 '$(x;f 3)%s ' ${q})${w}\w
${w}  ⎥${m} $(x)"

) }

# Bash won't get SIGWINCH if another process is in the foreground.
# Enable checkwinsize so that bash will check the terminal size when
# it regains control.
# http://cnswww.cns.cwru.edu/~chet/bash/FAQ (E11)
shopt -s checkwinsize

# Enable history appending instead of overwriting.
shopt -s histappend

# Change the window title of X terminals
case ${TERM} in
	xterm*|rxvt*|Eterm|aterm|kterm|gnome*|interix)
		PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/$HOME/~}\007"'
		;;
	screen)
		PROMPT_COMMAND='echo -ne "\033_${USER}@${HOSTNAME%%.*}:${PWD/$HOME/~}\033\\"'
		;;
esac

# flush HISTFILE constantly
PROMPT_COMMAND+='
history -a
'

# auto-update SSH_AUTH_SOCK within running shells
PROMPT_COMMAND+='
if [[ -n ${TMUX} && -n ${SSH_AUTH_SOCK} ]]; then
    unset SSH_AUTH_SOCK
    export $(tmux show-environment | grep ^SSH_AUTH_SOCK)
fi
'

use_color=false

# Set colorful PS1 only on colorful terminals.
# dircolors --print-database uses its own built-in database
# instead of using /etc/DIR_COLORS.  Try to use the external file
# first to take advantage of user additions.  Use internal bash
# globbing instead of external grep binary.
safe_term=${TERM//[^[:alnum:]]/?}   # sanitize TERM
match_lhs=""
[[ -f ~/.dir_colors   ]] && match_lhs="${match_lhs}$(<~/.dir_colors)"
[[ -f /etc/DIR_COLORS ]] && match_lhs="${match_lhs}$(</etc/DIR_COLORS)"
[[ -z ${match_lhs}    ]] \
	&& type -P dircolors >/dev/null \
	&& match_lhs=$(dircolors --print-database)
[[ $'\n'${match_lhs} == *$'\n'"TERM "${safe_term}* ]] && use_color=true

if ${use_color} ; then
	# Enable colors for ls, etc.  Prefer ~/.dir_colors #64489
	if type -P dircolors >/dev/null ; then
		if [[ -f ~/.dir_colors ]] ; then
			eval $(dircolors -b ~/.dir_colors)
		elif [[ -f /etc/DIR_COLORS ]] ; then
			eval $(dircolors -b /etc/DIR_COLORS)
		fi
	fi
    PS1=$(_ps1)
    ls --color=auto >/dev/null 2>&1 && _gnu_ls=true || _gnu_ls=false
    if ${_gnu_ls}; then
	    alias ls='ls -F --color=auto'
    else
	    alias ls='ls -F -G'
    fi
	alias grep='grep --colour=auto'
else
	if [[ ${EUID} == 0 ]] ; then
		# show root@ when we don't have colors
		PS1='\u@\h \W \$ '
	else
		PS1='\u@\h \w \$ '
	fi
fi


HISTCONTROL=ignoreboth:erasedups
HISTFILE=${ELLIPSIS}var/cache/bash/history
HISTFILESIZE=10000000
HISTIGNORE='[bf]g:[bf]g :exit:exit :cognito:cognito :incognito:incognito '
HISTSIZE=10000000
HISTTIMEFORMAT='%a %b %-d %-I:%M:%S %p  # '


[[ -r ${ELLIPSIS}data/profile/etc/bash/aliases ]] &&
    . ${ELLIPSIS}data/profile/etc/bash/aliases


# vim:set syntax=sh:
