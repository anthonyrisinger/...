#!/bin/bash

# Liked or used often.
alias l='ls -Flh'
alias ll='ls -Flha'
alias t='tree --charset=ascii -h -I "*.venv|*.pyc|__pycache__|*.egg-info|node_modules|vendor|.git|go|.pytest_cache|htmlcov"'
alias tt='t -a'
alias v='. *.venv/bin/activate'

# Grep wrappers.
alias ge='grep --extended-regexp'
alias gi='ge --ignore-case'
alias gr='ge --recursive'
alias gri='gi --recursive'
alias grep='grep --colour=auto --devices=skip --binary-files=without-match --exclude-dir={".*[.]venv",__pycache__,"*.egg-info",node_modules,vendor,.git,go,.pytest_cache,htmlcov} --exclude={".*[.]pyc",".coverage","*[.]min[.]*","*/dist/*[.]js","*/dist/*[.]js[.]*",}'

# Tmux wrappers.
alias th='td .'
alias ty='td ~'
alias tg='td "$(git rev-parse --show-cdup 2>/dev/null)"'
td () (
  set -e
  shopt -s extglob
  cd "${1:-.}"
  exec tmux new -ADs "$PWD" \; "${@:2}"
)

# Venv + Tmux wrappers.
alias vh='VIRTUAL_ENV="glob:*.venv" th'
alias vg='VIRTUAL_ENV="glob:*.venv" tg'
alias vd='VIRTUAL_ENV="glob:*.venv" td'

# Git aliases.
alias diff="git diff --no-index"

# Git operations framed as mutable QUERIES against three stacked TREES:
#   - Input operations (eg. add/commit) start at filesystem and push data IN.
#       TREE#1 [fs] -> TREE#2 [index] -> TREE#3 [repo]
#   - Output operations (eg. checkout/reset) start at repository and pull data OUT.
#       TREE#1 [repo] -> TREE#2 [index] -> TREE#3 [fs]
#   - Other operations (eg. status/diff) use INPUT order unless OUTPUT is obvious.
# (in)  Query
alias q="git status"
# (in)  Query +QUIET
alias qq="git status --short"
# (in)  Query Adds
alias qa="git add --patch"
# (in)  Query Adds +EXTRA (non-interactive)
alias qaa="git add --all"
# (out) Query Deletes
alias qd="git reset --patch"
# (out) Query Deletes +FORCE (unsafe; resets index)
alias qd!="git reset --mixed"
# (out) Query Deletes +EXTRA
alias qdd="git checkout --patch"
# (out) Query Deletes +EXTRA +FORCE (unsafe; resets filesystem)
alias qdd!="git reset --hard"
# (in)  Query Shows
alias qs="git show"
# (in)  Query Shows +QUIET
alias qsq="git show --stat"
# (in)  Query Shows +EXTRA (patch)
alias qss="git log --patch"
# (in)  Query Shows +EXTRA2 (graph)
alias qsso="git log --graph --oneline"
# (in)  Query Shows +EXTRA +QUIET
alias qssq="git log --stat"
# (in)  Query Upstream
alias qu="git remote --verbose"
# (in)  Query Upstream +EXTRA (sync; update and prune)
alias quu="git remote --verbose update --prune"
# (in)  Query WorkTREE#1
alias qw="git diff"
# (in)  Query WorkTREE#1 +QUIET
alias qwq="git diff --stat"
# (in)  Query WorkTREE#2
alias qww="git diff --cached"
# (in)  Query WorkTREE#2 +QUIET
alias qwwq="git diff --cached --stat"
# (in)  Query Commits ...
alias qc="git commit"
alias qca="git commit --amend"
alias qcam="git commit --amend --message"
alias qcan="git commit --amend --no-edit"
alias qcc="git commit --all"
alias qcca="git commit --all --amend"
alias qccam="git commit --all --amend --message"
alias qccan="git commit --all --amend --no-edit"
alias qccm="git commit --all --message"
alias qcm="git commit --message"
alias qp!="git push --force"
alias qp="git push"

incognito () { cognito off; }
cognito () {
  case ${1:-on} in
    (on)  [[ -z $HISTFILE ]] && HISTFILE="$HISTFILE__" && unset HISTFILE__;;
    (off) [[ -z $HISTFILE__ ]] && HISTFILE__="$HISTFILE" && unset HISTFILE;;
  esac
}

# Lazy load nvm.
nvm () {
  unset nvm
  export NVM_DIR=${NVM_DIR:-~/.nvm}
  . "$NVM_DIR/nvm.sh"
  . "$NVM_DIR/bash_completion"
  [[ $(type -t nvm) == function ]] &&
    nvm "$@"
}
